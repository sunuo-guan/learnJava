package meituan;

import java.util.*;

public class Test3 {
	public static void main(String[] args) {
		Scanner scanner = new Scanner(System.in);
		int n = scanner.nextInt();
		int x = scanner.nextInt();
		int y = scanner.nextInt();
		TreeNode[] nodeArr = new TreeNode[n];
		for (int i = 0; i < n; i++) {
			nodeArr[i] = new TreeNode(i);
		}
		int[][] r = new int[n - 1][2];
		for (int i = 0; i < n-1; i++) {
			r[i][0] = scanner.nextInt();
			r[i][1] = scanner.nextInt();
		}
		for (int i = 0; i < n-1; i++) {
			if(nodeArr[r[i][1]].left == null) {
				nodeArr[r[i][1]].left = nodeArr[r[i][0]];
			} else {
				nodeArr[r[i][1]].right = nodeArr[r[i][0]];
			}
		}
		int depth = maxDepth(nodeArr[y]);
		System.out.println(2);
	}
	
    public static int maxDepth(TreeNode root) {
        if(root==null) {
    		return 0;
    	}
    	
    	int left=maxDepth(root.left);
    	int right=maxDepth(root.right);
    	
    	if(left>right) {
    		return left+1;
    	}else {
    		return right+1;
    	}
    }
}

class TreeNode {
	int val;
	TreeNode left;
	TreeNode right;

	TreeNode() {
	}

	TreeNode(int val) {
		this.val = val;
	}

	TreeNode(int val, TreeNode left, TreeNode right) {
		this.val = val;
		this.left = left;
		this.right = right;
	}
}
